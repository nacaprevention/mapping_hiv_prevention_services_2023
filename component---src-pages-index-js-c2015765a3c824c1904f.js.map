{"version":3,"file":"component---src-pages-index-js-c2015765a3c824c1904f.js","mappings":"yRAaA,MAAMA,EAAS,CACb,aAAa,OAAQ,UAAW,YAAa,UAAW,SAAU,UAAW,QAC7E,QAAS,cAAe,QAAS,SAAU,MAAO,QAAS,QAC3D,4BAA6B,QAAS,MAAO,SAAU,SAAU,OACjE,UAAW,QAAS,OAAQ,QAAS,QAAS,WAAY,QAAS,OACnE,OAAQ,OAAQ,MAAO,UAAW,SAAU,SAAU,SAAU,OAAQ,WAGpEC,EAAW,CACf,eACA,qBACA,gEACA,gCACA,sDACA,8CACA,2BACA,6BACA,yBACA,kCACA,mDACA,8BACA,6BAGIC,EAAc,CAClB,kBACA,iBACA,qBACA,iBACA,qBACA,2BACA,qBACA,sBACA,MACA,SACA,SACA,iCACA,UACA,iBACA,MACA,UACA,kCACA,QACA,yBACA,WACA,gBACA,YACA,eACA,qBAGIC,EAAY,CAChB,gBACA,YACA,YA4SF,UAvSoB,KAChB,MAAMC,GAASC,EAAAA,EAAAA,QAAO,OAChB,EAACC,EAAe,EAACC,IAAqBC,EAAAA,EAAAA,UAAS,YAC/C,EAACC,EAAgB,EAACC,IAAsBF,EAAAA,EAAAA,UAASP,EAAS,KAC1D,EAACU,EAAmB,EAACC,IAAyBJ,EAAAA,EAAAA,UAASN,EAAY,KACnE,EAACW,EAAiB,EAACC,IAAuBN,EAAAA,EAAAA,UAASL,EAAU,KAC7D,EAACY,EAAc,EAACC,IAAoBR,EAAAA,EAAAA,UAASR,EAAO,IA6L5D,OA3LEiB,EAAAA,EAAAA,YAAU,KACN,MAAMC,EAAMC,EAAAA,GAAUf,EAAOgB,SAEvBC,EAAaF,EAAAA,MAChBG,MAAM,MACNC,OAAO,CAAC,OAAQ,QAChBC,UAAU,CAAC,IAAS,MAEjBC,EAAON,EAAAA,MAAaE,WAAWA,GAE/BK,EAAaP,EAAAA,MAClBQ,OAAO,CAAC,EAAG,EAAG,GAAI,GAAI,KACtBC,MAAM,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,YAIvDC,EAAqB,CACzB,eAAgB,mBAChB,qBAAsB,qBACtB,gEAAiE,sDACjE,gCAAiC,0BACjC,sDAAuD,8CACvD,8CAA+C,wCAC/C,2BAA4B,sBAC5B,6BAA8B,wBAC9B,yBAA0B,uBAC1B,kCAAmC,6BACnC,mDAAoD,4CACpD,8BAA+B,2BAC/B,4BAA6B,yBAGzBC,EAAwB,CAC5B,kBAAmB,iBACnB,iBAAkB,eAClB,qBAAsB,kBACtB,iBAAkB,eAClB,qBAAsB,kBACtB,2BAA4B,wBAC5B,qBAAsB,oBACtB,sBAAuB,oBACvB,IAAO,MACP,OAAU,QACV,OAAU,QACV,iCAAkC,6BAClC,QAAW,SACX,eAAkB,gBAClB,IAAO,MACP,QAAW,UACX,kCAAmC,+BACnC,MAAS,QACT,yBAA0B,wBAC1B,SAAY,WACZ,gBAAiB,eACjB,UAAa,YACb,aAAgB,eAChB,oBAAqB,oBAGhBC,EAAsB,CAC3B,gBAAiB,eACjB,UAAa,YACb,SAAY,aAKd,WACE,IAAIC,EAAgB,mBAEhBvB,IAAoBR,EAAS,GAC/B+B,EAAgBH,EAAmBpB,IAAoBA,EAC9CE,IAAuBT,EAAY,GAC5C8B,EAAgBF,EAAsBnB,IAAuBA,EACpDE,IAAqBV,EAAU,KACxC6B,EAAgBD,EAAoBlB,IAAqBA,GAG/DoB,QAAQC,IAAI,CACRf,EAAAA,IAAQ,4BACRA,EAAAA,IAAO,oBACRgB,MAAK,IAA6B,IAA3BC,EAASC,GAAY,EAC7BD,EAAQE,SAASC,SAAQC,IACvB,MAAMC,EAAiBJ,EAAYK,MAAKC,GAAKA,EAAEC,QAAUJ,EAAWK,WAAWD,QAC3EH,IACFD,EAAWK,WAAWC,cAAgBL,EAAeT,GACvD,IAGFd,EAAI6B,UAAU,QAAQC,SAEtB9B,EAAI+B,OAAO,KACRF,UAAU,QACVG,KAAKd,EAAQE,UACba,QAAQF,OAAO,QACfG,KAAK,IAAK3B,GACV2B,KAAK,QAAQC,IACZ,MAAMC,EAAQD,EAAER,WAAWC,aAC3B,OAAc,IAAVQ,EACO,UAEJ5B,EAAW4B,EAAM,IAGzBF,KAAK,SAAU,WACfG,GAAG,aAAa,SAASC,EAAOH,GAC/BlC,EAAAA,GAAUsC,MAAML,KAAK,OAAQ,WAC7B7C,EAAkB8C,EAAER,WAAWD,MACjC,IACCW,GAAG,YAAY,SAASC,EAAOH,GAC9B,MAAMC,EAAQD,EAAER,WAAWC,aACb,IAAVQ,EACAnC,EAAAA,GAAUsC,MAAML,KAAK,OAAQ,WAE7BjC,EAAAA,GAAUsC,MAAML,KAAK,OAAQ1B,EAAW4B,IAE5C/C,EAAkB,UACtB,IAEGgD,GAAG,SAAS,SAASC,EAAOH,GACzB,MAAMK,EAAQ,UAAaL,EAAER,WAAWD,MAAMe,cAAcC,QAAQ,OAAQ,KAC5EC,OAAOC,SAASC,KAAOL,CAC3B,IAEN,MAQMM,EAAS9C,EAAI+B,OAAO,KACvBG,KAAK,YAAY,sBAElB,IAAIa,EAAavC,EAAWC,SAASuC,KAAIC,GAChC,CAACA,EAAYzC,EAAW0C,aAAa1C,EAAWyC,IAAa,MAIxEF,EAAaA,EAAWI,QAAO,CAACf,EAAOgB,EAAOC,IAC1CA,EAAKC,WAAUC,GAAKA,EAAE,KAAOnB,EAAM,OAAQgB,IAG1CL,EAAWS,MAAKC,GAAkB,IAAXA,EAAI,MAC5BV,EAAWW,QAAQ,CAAC,EAAG,IAI3B,MAAMC,EAAeb,EAAOjB,UAAU,KACnCG,KAAKe,GACLd,QAAQF,OAAO,KACfG,KAAK,aAAa,CAACC,EAAGyB,IAAC,gBA3BL,GA2B0BA,EAAgB,MAE7DD,EAAa5B,OAAO,QACnBG,KAAK,QA/BY,IAgCjBA,KAAK,SA/Ba,IAgClBA,KAAK,QAAQC,GACC,IAATA,EAAE,GAAiB,UAChB3B,EAAW2B,EAAE,MAGtBwB,EAAa5B,OAAO,QACnBG,KAAK,IAAK2B,IACV3B,KAAK,IAAK4B,IACV5B,KAAK,KAAM,UACXA,KAAK,YAAa,QAClBA,KAAK,cAAe,sBACpB6B,MAAK5B,GACS,IAATA,EAAE,GAAgB,IAClBA,EAAE,GAAK,GAAW,WACZA,EAAE,GAAE,OAAMA,EAAE,GAAK,IAC7B,IAKC6B,OAAMC,IACLC,QAAQC,IAAI,sBAAuBF,EAAM,GAE/C,CAGAG,EAAqB,GAEpB,CAAC7E,EAAiBE,EAAoBE,IAGvC,uBAAK0E,UAAU,gBACX,uBAAKA,UAAU,oBACf,uBAAKC,IAAKC,EAAAA,EAAMC,IAAI,YAAYH,UAAU,SACtC,wBAAMA,UAAU,gBAAe,yCAC/B,wBAAMA,UAAU,aAAY,OAC5B,wBAAMA,UAAU,mBAAkB,IAAEjF,IAO7C,gBAAC,IAAS,KACP,gBAAC,IAAG,CAACiF,UAAU,OACb,gBAAC,IAAG,CAACI,GAAI,GACC,uBAAKC,IAAKxF,EAAQyF,MAAO,IAAKC,OAAQ,OAEhD,gBAAC,IAAG,CAACH,GAAI,GAIjB,0BAAI,gBAEJ,0BAAI,SAEM,gBAAC,IAAc,CAACI,GAAG,qCAAqCC,MAAOjF,EAAewE,UAAU,uBACnFvF,EAAOkE,KAAItB,GACR,gBAAC,IAASqD,KAAI,CACdC,IAAKtD,EACLuD,QAAS,KACPnF,EAAiB4B,IACjBwD,EAAAA,EAAAA,IAAS,UAAUxD,EAAMe,cAAcC,QAAQ,OAAQ,KAAO,GAE7DhB,MAKrB,0BAAI,WACJ,gBAAC,IAAc,CAACmD,GAAG,uCAAuCC,MAAOvF,EACjE8E,UAAS,wBAAyB9E,IAAoBR,EAAS,GAAK,sBAAwB,KACzFA,EAASiE,KAAImC,GACZ,gBAAC,IAASJ,KAAI,CACZC,IAAKG,EACLF,QAAS,KACPzF,EAAmB2F,GACnBzF,EAAsBV,EAAY,IAClCY,EAAoBX,EAAU,GAAG,GAElCkG,MAMP,0BAAI,sBACJ,gBAAC,IAAc,CAACN,GAAG,0CAA0CC,MAAOrF,EAChE4E,UAAS,wBAAyB5E,IAAuBT,EAAY,GAAK,yBAA2B,KAEtGA,EAAYgE,KAAIoC,GACf,gBAAC,IAASL,KAAI,CACZC,IAAKI,EACLH,QAAS,KACPvF,EAAsB0F,GACtB5F,EAAmBT,EAAS,IAC5Ba,EAAoBX,EAAU,GAAG,GAElCmG,MAMP,0BAAI,aACJ,gBAAC,IAAc,CAACP,GAAG,wCAAwCC,MAAOnF,EAC9D0E,UAAS,wBAAyB1E,IAAqBV,EAAU,GAAK,uBAAyB,KAEhGA,EAAU+D,KAAIJ,GACb,gBAAC,IAASmC,KAAI,CACZC,IAAKpC,EACLqC,QAAS,KACPrF,EAAoBgD,GACpBpD,EAAmBT,EAAS,IAC5BW,EAAsBV,EAAY,GAAG,GAEtC4D,MAKD,gBAAC,KAAI,CAACyB,UAAU,OAAOgB,GAAG,qBAAoB,8BAK5C,C,sDC3VR,UARiB,IAEb,2BACE,gBAAC,UAAW,M","sources":["webpack://mapping-hiv-prevention-services-nigeria-2023/./src/pages/NationalMap.js","webpack://mapping-hiv-prevention-services-nigeria-2023/./src/pages/index.js"],"sourcesContent":["import React, { useEffect, useState, useRef} from 'react';\nimport * as d3 from 'd3';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport logo from '../images/NACA.png';  \nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { navigate } from 'gatsby';\nimport { Link } from \"gatsby\";\n\n\n\nconst states = [\n  \"All States\",\"Abia\", \"Adamawa\", \"Akwa Ibom\", \"Anambra\", \"Bauchi\", \"Bayelsa\", \"Benue\", \n  \"Borno\", \"Cross River\", \"Delta\", \"Ebonyi\", \"Edo\", \"Ekiti\", \"Enugu\", \n  \"Federal Capital Territory\", \"Gombe\", \"Imo\", \"Jigawa\", \"Kaduna\", \"Kano\", \n  \"Katsina\", \"Kebbi\", \"Kogi\", \"Kwara\", \"Lagos\", \"Nasarawa\", \"Niger\", \"Ogun\", \n  \"Ondo\", \"Osun\", \"Oyo\", \"Plateau\", \"Rivers\", \"Sokoto\", \"Taraba\", \"Yobe\", \"Zamfara\"\n];\n\nconst services = [\n  \"All Services\",\n  \"Condom Distribtion\",\n  \"Family Life and HIV/AIDS Education (FLHE)/Sexuality Education\",\n  \"Gender and Human Rights (GHR)\",\n  \"Harm Reduction: Medication-Assisted Treatment (MAT)\",\n  \"Harm Reduction: Needle and Syringe Exchange\",\n  \"HIV Self-Testing (HIVST)\",\n  \"HIV Testing Services (HTS)\",\n  \"Mental Health Services\",\n  \"Pre-Exposure Prophylaxis (PrEP)\",\n  \"Social and Behaviour Change Communication (SBCC)\",\n  \"STI Screening and Treatment\",\n  \"Technical Assistance (TA)\"\n];\n\nconst populations = [\n  \"All Populations\",\n  \"AGYW in school\",\n  \"AGYW out of school\",\n  \"ABYM in school\",\n  \"ABYM out of school\",\n  \"Children living with HIV\",\n  \"General population\",\n  \"HIV-exposed infants\",\n  \"IDP\",\n  \"KP_FSW\",\n  \"KP_MSM\",\n  \"KP_people in enclosed settings\",\n  \"KP_PWID\",\n  \"KP_transgender\",\n  \"OVC\",\n  \"Parents\",\n  \"People living with disabilities\",\n  \"PLHIV\",\n  \"Serodiscordant couples\",\n  \"Teachers\",\n  \"Faith Leaders\",\n  \"Fishermen\",\n  \"Pastoralists\",\n  \"Transport Workers\"\n];\n\nconst locations = [\n  \"All Locations\",\n  \"Community\",\n  \"Facility\"\n];\n\n\n\nconst NationalMap = () => {\n    const svgRef = useRef(null);\n    const [currentHeading, setCurrentHeading] = useState(\"NIGERIA\");\n    const [selectedService, setSelectedService] = useState(services[0]);\n    const [selectedPopulation, setSelectedPopulation] = useState(populations[0]);\n    const [selectedLocation, setSelectedLocation] = useState(locations[0]);\n    const [selectedState, setSelectedState] = useState(states[0]);\n\n    useEffect(() => {\n        const svg = d3.select(svgRef.current);\n\n        const projection = d3.geoMercator()\n          .scale(3500)\n          .center([8.6753, 9.0820])\n          .translate([800 / 2, 800 / 2]);\n\n        const path = d3.geoPath().projection(projection);\n\n        const colorScale = d3.scaleThreshold()\n        .domain([1, 6, 11, 21, 31]) \n        .range([\"#76ff0d\", \"#a0d492\", \"#78b971\", \"#60a455\", \"#3e8d00\", \"#008000\"]);\n      \n    // Add #D3D3D3 (light grey) for the value 0    \n\n          const serviceToColumnMap = {\n            \"All Services\": \"serviceProviders\",\n            \"Condom Distribtion\": \"CondomDistribution\",\n            \"Family Life and HIV/AIDS Education (FLHE)/Sexuality Education\": \"FamilyLifeAndHivAidsEducationFlheSexualityEducation\",\n            \"Gender and Human Rights (GHR)\": \"GenderAndHumanRightsGhr\",\n            \"Harm Reduction: Medication-Assisted Treatment (MAT)\": \"HarmReductionMedicationAssistedTreatmentMat\",\n            \"Harm Reduction: Needle and Syringe Exchange\": \"HarmReductionNeedleAndSyringeExchange\",\n            \"HIV Self-Testing (HIVST)\": \"HivSelfTestingHivst\",\n            \"HIV Testing Services (HTS)\": \"HivTestingServicesHts\",\n            \"Mental Health Services\": \"MentalHealthServices\",\n            \"Pre-Exposure Prophylaxis (PrEP)\": \"PreExposureProphylaxisPrep\",\n            \"Social and Behaviour Change Communication (SBCC)\": \"SocialAndBehaviourChangeCommunicationSbcc\",\n            \"STI Screening and Treatment\": \"StiScreeningAndTreatment\",\n            \"Technical Assistance (TA)\": \"TechnicalAssistanceTa\"\n          };\n          \n          const populationToColumnMap = {\n            \"All Populations\": \"allPopulations\",\n            \"AGYW in school\": \"agywInSchool\",\n            \"AGYW out of school\": \"agywOutOfSchool\",\n            \"ABYM in school\": \"abymInSchool\",\n            \"ABYM out of school\": \"abymOutOfSchool\",\n            \"Children living with HIV\": \"childrenLivingWithHIV\",\n            \"General population\": \"generalPopulation\",\n            \"HIV-exposed infants\": \"hivExposedInfants\",\n            \"IDP\": \"idp\",\n            \"KP_FSW\": \"kpFsw\",\n            \"KP_MSM\": \"kpMsm\",\n            \"KP_people in enclosed settings\": \"kpPeopleInEnclosedSettings\",\n            \"KP_PWID\": \"kpPwid\",\n            \"KP_transgender\": \"kpTransgender\",\n            \"OVC\": \"ovc\",\n            \"Parents\": \"parents\",\n            \"People living with disabilities\": \"peopleLivingWithDisabilities\",\n            \"PLHIV\": \"plhiv\",\n            \"Serodiscordant couples\": \"serodiscordantCouples\",\n            \"Teachers\": \"teachers\",\n            \"Faith Leaders\": \"faithLeaders\",\n            \"Fishermen\": \"fishermen\",\n            \"Pastoralists\": \"pastoralists\",\n            \"Transport Workers\": \"transportWorkers\"\n           }\n\n           const locationToColumnMap = {\n            \"All Locations\": \"allLocations\",\n            \"Community\": \"community\",\n            \"Facility\": \"facility\"\n           }\n\n           \n          // Then, in your updateVisualization function:\n          function updateVisualization() {\n            let currentFilter = 'serviceProviders';\n          \n            if (selectedService !== services[0]) {\n              currentFilter = serviceToColumnMap[selectedService] || selectedService;\n            } else if (selectedPopulation !== populations[0]) {\n              currentFilter = populationToColumnMap[selectedPopulation] || selectedPopulation; // Assuming you create a similar mapping for populations\n            } else if (selectedLocation !== locations[0]) {\n              currentFilter = locationToColumnMap[selectedLocation] || selectedLocation; // Assuming you create a similar mapping for locations\n            }\n          \n        Promise.all([\n            d3.json(\"/nigeria_geojson.geojson\"),\n            d3.csv(\"/stateData.csv\")\n        ]).then(([geoData, serviceData]) => {\n          geoData.features.forEach(geoFeature => {\n            const serviceFeature = serviceData.find(s => s.state === geoFeature.properties.state);\n            if (serviceFeature) {\n              geoFeature.properties.currentValue = +serviceFeature[currentFilter];\n            }\n          });\n    \n          svg.selectAll(\"path\").remove(); \n    \n          svg.append(\"g\")\n            .selectAll(\"path\")\n            .data(geoData.features)\n            .enter().append(\"path\")\n            .attr(\"d\", path)\n            .attr(\"fill\", d => {\n              const value = d.properties.currentValue;\n              if (value === 0) {\n                  return \"#D3D3D3\"; // return grey if the value is 0\n              }\n              return colorScale(value);\n          })          \n          \n            .attr(\"stroke\", \"#FFFFFF\")\n            .on(\"mouseover\", function(event, d) {\n              d3.select(this).attr(\"fill\", \"#B11B10\");\n              setCurrentHeading(d.properties.state);\n            })\n            .on(\"mouseout\", function(event, d) {\n              const value = d.properties.currentValue;\n              if (value === 0) {\n                  d3.select(this).attr(\"fill\", \"#D3D3D3\"); // return grey if the value is 0\n              } else {\n                  d3.select(this).attr(\"fill\", colorScale(value));\n              }\n              setCurrentHeading(\"NIGERIA\");\n          })\n          \n            .on(\"click\", function(event, d) {\n                const stateURL = `/state/${d.properties.state.toLowerCase().replace(/\\s+/g, '-')}`;\n                window.location.href = stateURL;\n            });\n            \n      const legendWidth = 40;\n      const legendHeight = 20;\n\n      // Calculate translation for legend to be positioned bottom-right\n      const translateX = 650;  // 800 - 100 (legend total width with some padding)\n      const translateY = 500;  // 800 - 200 (considering 5 blocks of color and some padding)\n\n      // Create a group for the legend\n      const legend = svg.append(\"g\")\n        .attr(\"transform\", `translate(${translateX},${translateY})`);\n\n        let legendData = colorScale.domain().map(lowerBound => {\n          return [lowerBound, colorScale.invertExtent(colorScale(lowerBound))[1]];\n      });\n      \n      // Filter out duplicates, based on the first element of each tuple\n      legendData = legendData.filter((value, index, self) => \n          self.findIndex(v => v[0] === value[0]) === index);\n      \n      // Add the \"No data\" category at the start\n      if (!legendData.some(arr => arr[0] === 0)) {\n          legendData.unshift([0, 0]);\n      }\n      \n\n      const legendGroups = legend.selectAll(\"g\")\n        .data(legendData)\n        .enter().append(\"g\")\n        .attr(\"transform\", (d, i) => `translate(0, ${i * legendHeight})`);\n\n        legendGroups.append(\"rect\")\n        .attr(\"width\", legendWidth)\n        .attr(\"height\", legendHeight)\n        .attr(\"fill\", d => {\n          if (d[0] === 0) return \"#D3D3D3\";  // Explicitly return grey if the range is [0,0]\n          return colorScale(d[0]);\n        });    \n\n        legendGroups.append(\"text\")\n        .attr(\"x\", legendWidth + 5)\n        .attr(\"y\", legendHeight / 2)\n        .attr(\"dy\", \"0.35em\")\n        .attr(\"font-size\", \"12px\")\n        .attr(\"font-family\", \"'Lato', sans-serif\") \n        .text(d => {\n          if (d[0] === 0) return `0`; \n          if (d[0] > 30) return 'Above 30';\n          return `${d[0]} - ${d[1] - 1}`;\n      });\n      \n        })\n        \n        \n        .catch(error => {\n          console.log(\"Error loading file:\", error);\n        });\n    }\n\n    \n    updateVisualization(); // or use multiple parameters if needed\n\n  }, [selectedService, selectedPopulation, selectedLocation]);\n\n  return (\n    <div className=\"national-map\">\n        <div className=\"header-container\">\n        <img src={logo} alt=\"NACA Logo\" className=\"logo\"/>\n            <span className=\"welcome-text\">Mapping HIV Prevention Services, 2023</span>\n            <span className=\"separator\"> - </span>\n            <span className=\"current-heading\"> {currentHeading}</span>\n        </div>\n        \n\n        \n\n\n   <Container>\n      <Row className='row'>\n        <Col sm={8}>\n                  <svg ref={svgRef} width={800} height={800}></svg>\n          </Col>\n        <Col sm={4}>\n            \n\n\n<h2> Filter by: </h2>\n\n<h3>State</h3>\n          {/* Bootstrap Dropdown Example */}\n          <DropdownButton id=\"dropdown-basic-button_filter_state\" title={selectedState} className=\"scrollable-dropdown\">\n              {states.map(state => (\n                  <Dropdown.Item \n                  key={state} \n                  onClick={() => {\n                    setSelectedState(state);\n                    navigate(`/state/${state.toLowerCase().replace(/\\s+/g, '-')}`); // LGA page navigation\n                  }}>\n                    {state}\n                  </Dropdown.Item>\n              ))}\n          </DropdownButton>\n\n<h3>Service</h3>\n<DropdownButton id=\"dropdown-basic-button_filter_service\" title={selectedService} \nclassName={`scrollable-dropdown ${selectedService !== services[0] ? 'non-default-service' : ''}`}>\n  {services.map(service => (\n    <Dropdown.Item \n      key={service} \n      onClick={() => {\n        setSelectedService(service); \n        setSelectedPopulation(populations[0]); // Resetting Population dropdown\n        setSelectedLocation(locations[0]);     // Resetting Location dropdown\n      }}>\n      {service}\n    </Dropdown.Item>\n  ))}\n</DropdownButton>\n\n\n<h3> Target Population</h3>\n<DropdownButton id=\"dropdown-basic-button_filter_population\" title={selectedPopulation} \n    className={`scrollable-dropdown ${selectedPopulation !== populations[0] ? 'non-default-population' : ''}`}\n    >\n  {populations.map(population => (\n    <Dropdown.Item \n      key={population} \n      onClick={() => {\n        setSelectedPopulation(population);\n        setSelectedService(services[0]);   // Resetting Service dropdown\n        setSelectedLocation(locations[0]); // Resetting Location dropdown\n      }}>\n      {population}\n    </Dropdown.Item>\n  ))}\n</DropdownButton>\n\n\n<h3> Location</h3>\n<DropdownButton id=\"dropdown-basic-button_filter_location\" title={selectedLocation}    \n    className={`scrollable-dropdown ${selectedLocation !== locations[0] ? 'non-default-location' : ''}`}\n    >\n  {locations.map(location => (\n    <Dropdown.Item \n      key={location} \n      onClick={() => {\n        setSelectedLocation(location);\n        setSelectedService(services[0]);       // Resetting Service dropdown\n        setSelectedPopulation(populations[0]); // Resetting Population dropdown\n      }}>\n      {location}\n    </Dropdown.Item>\n  ))}\n</DropdownButton>\n\n      <Link className=\"link\" to=\"/SubmissionStatus\"> View submission status</Link>\n        </Col>\n      </Row>\n    </Container>\n    \n  </div>\n  );\n  \n            }\nexport default NationalMap; ","// Third-party imports\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// Local imports\nimport NationalMap from './NationalMap.js';\nimport '../styles/styles.css';\n\nconst HomePage = () => {\n  return (\n    <div>\n      <NationalMap />\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"names":["states","services","populations","locations","svgRef","useRef","currentHeading","setCurrentHeading","useState","selectedService","setSelectedService","selectedPopulation","setSelectedPopulation","selectedLocation","setSelectedLocation","selectedState","setSelectedState","useEffect","svg","d3","current","projection","scale","center","translate","path","colorScale","domain","range","serviceToColumnMap","populationToColumnMap","locationToColumnMap","currentFilter","Promise","all","then","geoData","serviceData","features","forEach","geoFeature","serviceFeature","find","s","state","properties","currentValue","selectAll","remove","append","data","enter","attr","d","value","on","event","this","stateURL","toLowerCase","replace","window","location","href","legend","legendData","map","lowerBound","invertExtent","filter","index","self","findIndex","v","some","arr","unshift","legendGroups","i","legendWidth","legendHeight","text","catch","error","console","log","updateVisualization","className","src","logo","alt","sm","ref","width","height","id","title","Item","key","onClick","navigate","service","population","to"],"sourceRoot":""}